<?xml version="1.0" encoding="UTF-8"?>
<web-app xmlns="http://xmlns.jcp.org/xml/ns/javaee"
		 xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
		 xsi:schemaLocation="http://xmlns.jcp.org/xml/ns/javaee http://xmlns.jcp.org/xml/ns/javaee/web-app_4_0.xsd"
		 version="4.0">
	<display-name>webapp</display-name>
	
	<!-- spring context configuration -->
	
	<context-param>
		<param-name>contextConfigLocation</param-name>
		<param-value>
			classpath:smartsuite/datasource-context.xml
			classpath:smartsuite/transaction-context.xml
			classpath:smartsuite/application-context.xml
			classpath:smartsuite/security-context.xml
		</param-value>
	</context-param>
	<!-- ======= -->
	<!-- filters -->
	<!-- ======= -->
	
	<!-- UTF-8 encoding filter -->
	<filter>
		<filter-name>encodingFilter</filter-name>
		<filter-class>org.springframework.web.filter.CharacterEncodingFilter</filter-class>
		<init-param>
			<param-name>encoding</param-name>
			<param-value>utf-8</param-value>
		</init-param>
	</filter>
	
	
	
	<!-- spring security filter -->
	<filter>
		<filter-name>springSecurityFilterChain</filter-name>
		<filter-class>org.springframework.web.filter.DelegatingFilterProxy</filter-class>
	</filter>
	
	<!-- XSS protection filter -->
	<!-- 
	<filter>
		<filter-name>xssFilter</filter-name>
		<filter-class>smartsuite.security.web.filter.XSSFilter</filter-class>
	</filter>
	-->
	
	<!-- Execution logging filter -->
	<filter>
		<filter-name>executionLoggingFilter</filter-name>
		<filter-class>smartsuite.log.spring.executelog.ExecutionLoggingFilter</filter-class>
	</filter>
	
	<!-- 서울보증보험 연계 시 추가 필터  RequestWrapperFilter -->
	<!--<filter>
		<filter-name>RequestWrapperFilter</filter-name>
		<filter-class>smartsuite.web.RequestWrapperFilter</filter-class>
	</filter>-->

	<!-- 모바일 mobileApiFilter -->
	<!-- <filter>
		<filter-name>mobileApiFilter</filter-name>
		<filter-class>smartsuite.web.MobileApiFilter</filter-class>
	</filter> -->
	
	<!-- =============== -->
	<!-- filter-mappings (필터의 순서에 주의) -->
	<!-- =============== -->
	<!-- 
	<filter-mapping>
		<filter-name>xssFilter</filter-name>
		<servlet-name>dispatcherServlet</servlet-name>
	</filter-mapping>
	-->
	
	<filter-mapping>
		<filter-name>encodingFilter</filter-name>
		<url-pattern>/*</url-pattern>
	</filter-mapping>
	
	<filter-mapping>
		<filter-name>springSecurityFilterChain</filter-name>
		<servlet-name>dispatcherServlet</servlet-name>
	</filter-mapping>
	
	<filter-mapping>
		<filter-name>executionLoggingFilter</filter-name>
		<url-pattern>*.do</url-pattern>
	</filter-mapping>
	
	<!-- 서울보증보험 연계 시 추가 필터  RequestWrapperFilter -->
	<!--<filter-mapping>
		<filter-name>RequestWrapperFilter</filter-name>
		<url-pattern>/sgic/recv.do</url-pattern>
	</filter-mapping>-->

	<!-- 모바일  mobileApiFilter-->
	<!-- <filter-mapping>
		<filter-name>mobileApiFilter</filter-name>
		<url-pattern>/mobileLogin.do</url-pattern>
	</filter-mapping> -->
	
	<!-- ========= -->
	<!-- listeners -->
	<!-- ========= -->
	

	<!-- spring 설정을 처리하는 리스너 -->
	<listener>
		<listener-class>org.springframework.web.context.ContextLoaderListener</listener-class>
	</listener>

	<!-- cachebuster 모듈 spring 기반에서 연동하기 위한 필터  -->
	<!-- <listener>
		<listener-class>smartsuit.cachebuster.web.listener.SpringCacheBusterInitializeListener</listener-class>
	</listener> -->
	
	<!-- 중복 로그인 방지 기능을 위한 필터  -->
	<listener> 
		<listener-class>org.springframework.security.web.session.HttpSessionEventPublisher</listener-class>
	</listener>
	
	<!-- Request 객체 참조하기 위한 리스너 -->	
	<listener>
		<listener-class>org.springframework.web.context.request.RequestContextListener</listener-class>
	</listener>
	
	<!-- ======== -->
	<!-- servlets -->
	<!-- ======== -->
	<!-- 라이선스 인증 서블릿 추가 -->
	<servlet>
		<servlet-name>licenseServlet</servlet-name>
		<servlet-class>smartsuite.license.servlet.SMARTSuite9LicenseServlet</servlet-class>
    	<load-on-startup>1</load-on-startup>
	</servlet>
	
	<!-- spring servlet -->
	<servlet>
		<servlet-name>dispatcherServlet</servlet-name>
		<servlet-class>org.springframework.web.servlet.DispatcherServlet</servlet-class>
		<init-param>
			<param-name>contextConfigLocation</param-name>
			<param-value>classpath:smartsuite/dispatcher-context.xml</param-value>
		</init-param>
		<load-on-startup>1</load-on-startup>
	</servlet>
	
	<!-- ================ -->
	<!-- servlet-mappings -->
	<!-- ================ -->
	
	<!-- RESTful API -->
	<servlet-mapping>
		<servlet-name>dispatcherServlet</servlet-name>
		<url-pattern>/rest/api/extractLibraries</url-pattern>
	</servlet-mapping> 

	<servlet-mapping>
		<servlet-name>licenseServlet</servlet-name>
		<url-pattern>/license.do</url-pattern>
	</servlet-mapping>

	<servlet-mapping>
		<servlet-name>dispatcherServlet</servlet-name>
		<url-pattern>*.do</url-pattern>
	</servlet-mapping>
	
	<servlet-mapping>
		<servlet-name>dispatcherServlet</servlet-name>
		<url-pattern>/rest/api/*</url-pattern>
	</servlet-mapping>
	
	<servlet-mapping>
		<servlet-name>dispatcherServlet</servlet-name>
		<url-pattern>/app/*</url-pattern>
	</servlet-mapping>
	
	<!-- =========== -->
	<!-- error-pages -->
	<!-- =========== -->
	
	<error-page>
    	<error-code>400</error-code>
    	<location>/WEB-INF/jsp/error/400.jsp</location>
    </error-page>
    
    <error-page>
    	<error-code>403</error-code>
    	<location>/WEB-INF/jsp/error/403.jsp</location>
    </error-page>
    
    <error-page>
		<error-code>404</error-code>
		<location>/WEB-INF/jsp/error/404.jsp</location>
	</error-page>
	
    <error-page>
    	<error-code>500</error-code>
    	<location>/WEB-INF/jsp/error/500.jsp</location>
    </error-page>
    
    <!-- 지정된 에러 코드 외의 값이 들어올 경우, 기본 에러 페이지로 이동  -->
    <error-page>
    	<location>/WEB-INF/jsp/error/error.jsp</location>
    </error-page>
    
    <!-- exception 발생시 에러 막음 -->
    <error-page>
    	<exception-type>java.lang.Exception</exception-type>
    	<location>/WEB-INF/jsp/error/500.jsp</location>
    </error-page>
    
    <!-- ================= -->
    <!-- welcome-file-list -->
    <!-- ================= -->
    
    <welcome-file-list>
    	<welcome-file>index.do</welcome-file>
    </welcome-file-list>
    
    <session-config>
    	<session-timeout>120</session-timeout>
    </session-config>
</web-app>