<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="mail-work">

	<select id="findCloseYnExcelMailAP" resultType="string">
	    /* mail.findCloseYnExcelMailAP */
	    SELECT MAX(CLSG_YN) AS CLSG_YN FROM EML_TASK_PRGS_STS WHERE TEN_ID= #{g.tenant} AND TASK_UUID = #{p.task_uuid}
	</select>
	
	<delete id="deleteExcelCellInfo">
	    /* mail-work.deleteExcelCellInfo: excel cell list 삭제 */
	    DELETE
	      FROM EML_TASK_EXCEL_CEL C
	     WHERE EXISTS (
	                   SELECT '1'
	                     FROM EML_TASK_EXCEL_ROW R
	                    WHERE R.TEN_ID = C.TEN_ID
	                      AND R.EXCEL_ROW_UUID = C.EXCEL_ROW_UUID
	                      AND R.TEN_ID = #{g.tenant}
	                      AND R.EML_TASK_UUID = #{p.eml_task_uuid}
	                  )
	</delete>
	
	<delete id="deleteExcelRowInfo">
	    /* mail-work.deleteExcelRowInfo: excel row list 삭제 */
	    DELETE
	      FROM EML_TASK_EXCEL_ROW
	     WHERE TEN_ID = #{g.tenant}
	       AND EML_TASK_UUID = #{p.eml_task_uuid}
	</delete>
	
	<delete id="deleteExcelSheetInfo">
	    /* mail-work.deleteExcelSheetInfo: excel sheet info 삭제 */
	    DELETE
	      FROM EML_TASK_EXCEL_SHT
	     WHERE TEN_ID = #{g.tenant}
	       AND EML_TASK_UUID = #{p.eml_task_uuid}
	</delete>
	
	<delete id="deleteExcelInfo">
	    /* mail-work.deleteExcelInfo: excel info 삭제 */
	    DELETE
	      FROM EML_TASK_EXCEL_ATH
	     WHERE TEN_ID = #{g.tenant}
	       AND EML_TASK_UUID = #{p.eml_task_uuid}
	</delete>
	
	<!-- 전송여부 변경  -->
	<update id="updateEmailWorkSendSuccess">
	    /* mail-work.updateEmailWorkSendSuccess : 이메일 업무 메일 발송 후 전송 일시 및 RESULT_MSG , STS_CD 업데이트*/
	    UPDATE EML_TASK_SND_HISTREC
	       SET SND_DTTM =#{g.now}
	         , SND_STS_CCD = #{p.snd_sts_ccd}
	         <if test="p.rcpt_res_msg != null">
	             ,SND_RES_MSG = #{p.rcpt_res_msg}
	         </if>
	     WHERE TEN_ID = #{g.tenant}
	       AND EML_SND_HISTREC_UUID = #{p.eml_snd_histrec_uuid}
	</update>
	
	<update id="updateEmailWorkReSendSts">
	    /* mail-work.updateEmailWorkReSendSts :재전송 시 내역들에 대해서 추가한다.*/
	    UPDATE EML_TASK_SND_HISTREC
	       SET EML_ADD_CONT ='재전송으로 의한 완료 처리'
	         , RESND_RSN = #{p.resnd_rsn}
	         , SND_STS_CCD = 'SND_WTG'
	     WHERE TEN_ID = #{g.tenant}
	       AND EML_TASK_SUBJ_UUID = #{p.eml_task_subj_uuid}
	       AND EML_SND_HISTREC_UUID != #{p.eml_snd_histrec_uuid}
	</update>
	
	<update id="updateEmailWorkSendComplete">
	    /* mail-work.updateEmailWorkSendComplete : 이메일 업무 전송 여부 업데이트*/
	    UPDATE EML_TASK_PRGS_STS
	       SET EML_TASK_STS_CCD = #{p.eml_task_sts_ccd}
	         , EML_RE_YN = #{p.eml_re_yn}
	         , MODR_ID = #{g.username}
	         , MOD_DTTM = #{g.now}
	     WHERE TEN_ID = #{g.tenant}
	       AND EML_TASK_SUBJ_UUID = #{p.eml_task_subj_uuid}
	</update>
	
	<select id="findListWorkExcelList" resultType="map">
	    /* mail-work.findListWorkExcelList : 메일 업무 엑셀 목록 상세 조회*/
	    SELECT DC.TEN_ID
	         , DML.LANG_CCD
	         , DC.CCD
	         , DC.DTLCD AS WORK_CD
	         , DML.DTLCD_NM
	         , DML.DTLCD_NM AS WORK_NM
	         , DC.DTLCD_SORT
	         , DC.RMK
	         , DC.USE_YN
	         , DC.MOD_DTTM
	         , EX.EML_TASK_NM
	         , EX.EML_TASK_EXPLN
	      FROM DTLCD DC
	     INNER JOIN DTLCD_MULTLANG DML
	        ON  DC.TEN_ID = DML.TEN_ID
	       AND DC.CCD = DML.CCD
	       AND DC.DTLCD = DML.DTLCD
	      LEFT JOIN EML_TASK_EXCEL_ATH EX
	        ON EX.TEN_ID = DC.TEN_ID
	       AND EX.EML_TASK_TYP_CCD = DC.DTLCD
	       AND EX.USE_YN = 'Y'
	     WHERE DC.USE_YN = 'Y'
	       AND DC.STS &lt;&gt; 'D'
	       AND DC.TEN_ID = #{g.tenant}
	       AND DC.CCD = #{p.ccd}
	       AND DML.LANG_CCD = #{g.locale}
	     ORDER BY DC.DTLCD_SORT
	</select>
	
	<select id="findListExcelInfoList" resultType="map">
	    /* mail-work.findListExcelInfoList : 업무코드를 통한 이메일 업무 리스트 조회*/
	    SELECT TEN_ID
	         , EML_TASK_UUID
	         , EML_TMPL_CD
	         , EML_TASK_NM
	         , EML_TASK_EXPLN
	         , EML_TASK_TYP_CCD
	         , USE_YN
	         , CNFD_YN
	         , REGR_ID
	         , REG_DTTM
	         , ATHG_UUID
	         , MODR_ID
	         , MOD_DTTM
	      FROM EML_TASK_EXCEL_ATH
	     WHERE TEN_ID = #{g.tenant}
	       AND EML_TASK_TYP_CCD = #{p.eml_task_typ_ccd}
	</select>
	
	<select id="findWorkExcelSheet" resultType="smartsuite.app.common.excel.bean.SheetInfoBean">
	    /* mail-work.findWorkExcelSheet : 업무코드에 해당하는  INFO 정보 조회*/
	    SELECT TEN_ID
	         , EXCEL_SHT_UUID
	         , EML_TASK_UUID
	         , EXCEL_SHT_NM
	         , REGR_ID
	         , REG_DTTM
	      FROM EML_TASK_EXCEL_SHT
	     WHERE TEN_ID = #{g.tenant}
	       AND EML_TASK_UUID = #{p.eml_task_uuid}
	</select>
	
	<select id="findListSheetInfoListCombo" resultType="map">
	    /* mail-work.findListSheetInfoListCombo : 업무코드에 해당하는  INFO 정보 리스트 combobox 용 조회*/
	    SELECT TEN_ID
	         , EXCEL_SHT_UUID
	         , EML_TASK_UUID
	         , EXCEL_SHT_NM
	         , REGR_ID
	         , REG_DTTM
	      FROM EML_TASK_EXCEL_SHT
	     WHERE TEN_ID = #{g.tenant}
	       AND EML_TASK_UUID = #{p.eml_task_uuid}
	</select>
	
	<select id="findWorkExcelInfo" resultType="smartsuite.app.common.excel.bean.ExcelInfoBean">
	    /* mail-work.findWorkExcelInfo : Excel ExcelInfo 조회 */
	    SELECT TEN_ID
	         , EML_TASK_UUID
	         , EML_TMPL_CD
	         , EML_TASK_NM
	         , EML_TASK_EXPLN
	         , EML_TASK_TYP_CCD
	         , USE_YN
	         , ATHG_UUID
	         , CNFD_YN
	         , REGR_ID
	         , REG_DTTM
	         , MODR_ID
	         , MOD_DTTM
	      FROM EML_TASK_EXCEL_ATH
	     WHERE TEN_ID = #{g.tenant}
	       AND EML_TASK_UUID = #{p.eml_task_uuid}
	</select>
	
	<select id="findWorkExcelInfoByWorkCd" resultType="smartsuite.app.common.excel.bean.ExcelInfoBean">
	    /* mail-work.findWorkExcelInfoByWorkCd : Excel ExcelInfo 조회 (업무유형 CD로 조회) */
	    SELECT TEN_ID
	         , EML_TASK_UUID
	         , EML_TMPL_CD
	         , EML_TASK_NM
	         , EML_TASK_EXPLN
	         , EML_TASK_TYP_CCD
	         , USE_YN
	         , ATHG_UUID
	         , CNFD_YN
	         , REGR_ID
	         , REG_DTTM
	         , MODR_ID
	         , MOD_DTTM
	      FROM EML_TASK_EXCEL_ATH
	     WHERE TEN_ID = #{g.tenant}
	       AND EML_TASK_TYP_CCD = #{p.eml_task_typ_ccd}
	       AND USE_YN = 'Y'
	       AND CNFD_YN = 'Y'
	</select>
	
	<select id="findListWorkExcelSheetRow" resultType="smartsuite.app.common.excel.bean.RowInfoBean">
	    /* mail-work.findListWorkExcelSheetRow : Excel sheet row */
	    SELECT TEN_ID
	         , EXCEL_ROW_UUID
	         , EML_TASK_UUID
	         , EXCEL_SHT_UUID
	         , EXCEL_ROW_NO
	         , USR_AUTH_UUID
	         , EXCEL_ROW_KEY_VAL
	         , REGR_ID
	         , REG_DTTM
	      FROM EML_TASK_EXCEL_ROW
	     WHERE TEN_ID = #{g.tenant}
	       AND EML_TASK_UUID = #{p.eml_task_uuid}
	       AND EXCEL_SHT_UUID = #{p.excel_sht_uuid}
	     ORDER BY EXCEL_ROW_NO ASC
	</select>
	
	<select id="findExcelRowListBySheetId" resultType="map">
	    /* mail-work.findExcelRowListBySheetId : Excel sheet별 row 값  */
	    SELECT ER.TEN_ID
	         , ER.EXCEL_ROW_UUID
	         , ER.EML_TASK_UUID
	         , ER.EXCEL_SHT_UUID
	         , ER.EXCEL_ROW_NO
	         , ER.USR_AUTH_UUID
	         , ER.EXCEL_ROW_KEY_VAL
	         , ER.REGR_ID
	         , ER.REG_DTTM
	         , EW.EXCEL_SHT_NM
	      FROM EML_TASK_EXCEL_ROW ER
	     INNER JOIN EML_TASK_EXCEL_SHT EW
	        ON ER.TEN_ID = EW.TEN_ID
	       AND ER.EXCEL_SHT_UUID = EW.EXCEL_SHT_UUID
	     WHERE ER.TEN_ID = #{g.tenant}
	       AND ER.EXCEL_SHT_UUID = #{p.excel_sht_uuid}
	     ORDER BY ER.EXCEL_ROW_NO ASC
	</select>
	
	<resultMap type="map" id="resultMap-findExcelCellListByRowId">
	    <result property="str_cel_val" column="STR_CEL_VAL" jdbcType="CLOB" javaType="string" />
	    <result property="fmla_cel_val" column="FMLA_CEL_VAL" jdbcType="CLOB" javaType="string" />
	</resultMap>
	<select id="findExcelCellListByRowId" resultMap="resultMap-findExcelCellListByRowId">
	    /* mail-work.findExcelCellListByRowId : ROW id를 기준으로 CELL 리스트 조회*/
	    SELECT TEN_ID
	         , EXCEL_CEL_UUID
	         , EXCEL_ROW_UUID
	         , COL_SIZE
	         , LTR_THK_YN
	         , LTR_HGT
	         , LTR_FONT_NM
	         , LTR_ITAL_YN
	         , LTR_STRKTH_YN
	         , OFFSET_USE_YN
	         , UNDLN_SCOP
	         , STR_SET
	         , LTR_CLR
	         , DAT_FMT
	         , HIDE_YN
	         , LCKD_YN
	         , LNBRK_YN
	         , CEL_CUSTMZ_YN
	         , CEL_BRD_BTTM_CD
	         , CEL_BRD_LFT_CD
	         , CEL_BRD_RGT_CD
	         , CEL_BRD_TOP_CD
	         , CEL_BRD_BTTM_CLR
	         , BGD_FILL_CLR
	         , FGD_FILL_CLR
	         , CEL_BRD_LFT_CLR
	         , CEL_BRD_RGT_CLR
	         , CEL_BRD_TOP_CLR
	         , TOV_YN
	         , CEL_VERT_CUSTMZ_TYP_CD
	         , EXCEL_CEL_TYP
	         , FILL_PATT_TYP_CD
	         , STR_CEL_VAL
	         , DBL_CEL_VAL
	         , BOOL_CEL_VAL
	         , ERR_CEL_VAL
	         , FMLA_CEL_VAL
	         , CEL_IDX_NO
	         , CEL_MARG
	         , REGR_ID
	         , REG_DTTM
	      FROM EML_TASK_EXCEL_CEL
	     WHERE TEN_ID = #{g.tenant}
	       AND EXCEL_ROW_UUID = #{p.excel_row_uuid}
	     ORDER BY CEL_IDX_NO ASC
	</select>
	
	<select id="findListWorkExcelSheetCellList" resultType="smartsuite.app.common.excel.bean.CellInfoBean" parameterType="smartsuite.app.common.excel.bean.RowInfoBean">
	    /* mail-work.findListWorkExcelSheetCellList : ROW별 CELL 리스트 조회*/
	    SELECT TEN_ID
	         , EXCEL_CEL_UUID
	         , EXCEL_ROW_UUID
	         , COL_SIZE
	         , LTR_THK_YN
	         , LTR_HGT
	         , LTR_FONT_NM
	         , LTR_ITAL_YN
	         , LTR_STRKTH_YN
	         , OFFSET_USE_YN
	         , UNDLN_SCOP
	         , STR_SET
	         , LTR_CLR
	         , DAT_FMT
	         , HIDE_YN
	         , LCKD_YN
	         , LNBRK_YN
	         , CEL_CUSTMZ_YN
	         , CEL_BRD_BTTM_CD
	         , CEL_BRD_LFT_CD
	         , CEL_BRD_RGT_CD
	         , CEL_BRD_TOP_CD
	         , CEL_BRD_BTTM_CLR
	         , BGD_FILL_CLR
	         , FGD_FILL_CLR
	         , CEL_BRD_LFT_CLR
	         , CEL_BRD_RGT_CLR
	         , CEL_BRD_TOP_CLR
	         , TOV_YN
	         , CEL_VERT_CUSTMZ_TYP_CD
	         , EXCEL_CEL_TYP
	         , FILL_PATT_TYP_CD
	         , STR_CEL_VAL
	         , DBL_CEL_VAL
	         , BOOL_CEL_VAL
	         , ERR_CEL_VAL
	         , FMLA_CEL_VAL
	         , CEL_IDX_NO
	         , CEL_MARG
	         , REGR_ID
	         , REG_DTTM
	      FROM EML_TASK_EXCEL_CEL
	     WHERE TEN_ID = #{g.tenant}
	       AND EXCEL_ROW_UUID = #{p.excel_row_uuid}
	     ORDER BY CEL_IDX_NO ASC
	</select>
	
	<insert id="insertMailWorkExcelInfo" parameterType="smartsuite.app.common.excel.bean.ExcelInfoBean">
	    /* mail-work.insertMailWorkExcelInfo 이메일 메일 업무 Info 정보 신규 저장*/
	    INSERT INTO EML_TASK_EXCEL_ATH (
	        TEN_ID
	        , EML_TASK_UUID
	        , EML_TMPL_CD
	        , EML_TASK_NM
	        , EML_TASK_EXPLN
	        , EML_TASK_TYP_CCD
	        , USE_YN
	        , CNFD_YN
	        , ATHG_UUID
	        , REGR_ID
	        , REG_DTTM
	        , MODR_ID
	        , MOD_DTTM
	    ) VALUES (
	        #{g.tenant}
	        , #{p.eml_task_uuid}
	        , #{p.eml_tmpl_cd}
	        , #{p.eml_task_nm}
	        , #{p.eml_task_expln}
	        , #{p.eml_task_typ_ccd}
	        , #{p.use_yn}
	        , #{p.cnfd_yn}
	        , #{p.athg_uuid}
	        , #{g.username}
	        , #{g.now}
	        , #{g.username}
	        , #{g.now}
	    )
	</insert>
	
	<update id="updateExcel" parameterType="smartsuite.app.common.excel.bean.ExcelInfoBean">
	    /* mail-work.updateExcel 이메일 메일 업무 Info 정보 update*/
	    UPDATE EML_TASK_EXCEL_ATH
	       SET EML_TMPL_CD = #{p.eml_tmpl_cd}
	         , EML_TASK_NM = #{p.eml_task_nm}
	         , EML_TASK_EXPLN = #{p.eml_task_expln}
	         , EML_TASK_TYP_CCD = #{p.eml_task_typ_ccd}
	         , USE_YN = #{p.use_yn}
	         , CNFD_YN = #{p.cnfd_yn}
	         , ATHG_UUID = #{p.athg_uuid}
	         , MODR_ID = #{g.username}
	         , MOD_DTTM = #{g.now}
	     WHERE EML_TASK_UUID = #{p.eml_task_uuid}
	</update>
	
	<insert id="insertExcelSheetInfo" parameterType="smartsuite.app.common.excel.bean.SheetInfoBean">
	    /* mail-work.insertExcelSheetInfo 이메일 메일 업무 Sheet Info 정보 저장 */
	    INSERT INTO EML_TASK_EXCEL_SHT (
	        TEN_ID
	        , EXCEL_SHT_UUID
	        , EML_TASK_UUID
	        , EXCEL_SHT_NM
	        , REGR_ID
	        , REG_DTTM
	    ) VALUES (
	        #{g.tenant}
	        , #{p.excel_sht_uuid}
	        , #{p.eml_task_uuid}
	        , #{p.excel_sht_nm}
	        , #{g.username}
	        , #{g.now}
	    )
	</insert>
	
	<insert id="insertExcelRowInfo" parameterType="smartsuite.app.common.excel.bean.RowInfoBean">
	    /* mail-work.insertExcelRowInfo 이메일 메일 업무 엑셀 시트별 Row Info 저장*/
	    INSERT INTO EML_TASK_EXCEL_ROW (
	        TEN_ID
	        , EXCEL_ROW_UUID
	        , EML_TASK_UUID
	        , EXCEL_SHT_UUID
	        , EXCEL_ROW_NO
	        , USR_AUTH_UUID
	        , REGR_ID
	        , REG_DTTM
	    ) VALUES (
	        #{g.tenant}
	        , #{p.excel_row_uuid}
	        , #{p.eml_task_uuid}
	        , #{p.excel_sht_uuid}
	        , #{p.excel_row_no}
	        , #{p.usr_auth_uuid}
	        , #{g.username}
	        , #{g.now}
	    )
	</insert>
	
	<insert id="insertExcelCellInfo" parameterType="smartsuite.app.common.excel.bean.CellInfoBean">
	    /* mail-work.insertExcelCellInfo 이메일 메일 업무 엑셀 시트 Row Index 별 Cell Info 저장*/
	    INSERT INTO EML_TASK_EXCEL_CEL (
	        TEN_ID
	        , EXCEL_CEL_UUID
	        , EXCEL_ROW_UUID
	        , COL_SIZE
	        , LTR_THK_YN
	        , LTR_HGT
	        , LTR_FONT_NM
	        , LTR_ITAL_YN
	        , LTR_STRKTH_YN
	        , OFFSET_USE_YN
	        , UNDLN_SCOP
	        , STR_SET
	        , LTR_CLR
	        , DAT_FMT
	        , HIDE_YN
	        , LCKD_YN
	        , LNBRK_YN
	        , CEL_CUSTMZ_YN
	        , CEL_BRD_BTTM_CD
	        , CEL_BRD_LFT_CD
	        , CEL_BRD_RGT_CD
	        , CEL_BRD_TOP_CD
	        , CEL_BRD_BTTM_CLR
	        , BGD_FILL_CLR
	        , FGD_FILL_CLR
	        , CEL_BRD_LFT_CLR
	        , CEL_BRD_RGT_CLR
	        , CEL_BRD_TOP_CLR
	        , TOV_YN
	        , CEL_VERT_CUSTMZ_TYP_CD
	        , EXCEL_CEL_TYP
	        , FILL_PATT_TYP_CD
	        , STR_CEL_VAL
	        , DBL_CEL_VAL
	        , BOOL_CEL_VAL
	        , ERR_CEL_VAL
	        , FMLA_CEL_VAL
	        , CEL_IDX_NO
	        , CEL_MARG
	        , REGR_ID
	        , REG_DTTM
	    ) VALUES (
	        #{g.tenant}
	        , #{p.excel_cel_uuid}
	        , #{p.excel_row_uuid}
	        , #{p.col_size}
	        , #{p.ltr_thk_yn}
	        , #{p.ltr_hgt}
	        , #{p.ltr_font_nm}
	        , #{p.ltr_ital_yn}
	        , #{p.ltr_strkth_yn}
	        , #{p.offset_use_yn}
	        , #{p.undln_scop}
	        , #{p.str_set}
	        , #{p.ltr_clr}
	        , #{p.dat_fmt}
	        , #{p.hide_yn}
	        , #{p.lckd_yn}
	        , #{p.lnbrk_yn}
	        , #{p.cel_custmz_yn}
	        , #{p.cel_brd_bttm_cd}
	        , #{p.cel_brd_lft_cd}
	        , #{p.cel_brd_rgt_cd}
	        , #{p.cel_brd_top_cd}
	        , #{p.cel_brd_bttm_clr}
	        , #{p.bgd_fill_clr}
	        , #{p.fgd_fill_clr}
	        , #{p.cel_brd_lft_clr}
	        , #{p.cel_brd_rgt_clr}
	        , #{p.cel_brd_top_clr}
	        , #{p.tov_yn}
	        , #{p.cel_vert_custmz_typ_cd}
	        , #{p.excel_cel_typ}
	        , #{p.fill_patt_typ_cd}
	        , #{p.str_cel_val}
	        , #{p.dbl_cel_val}
	        , #{p.bool_cel_val}
	        , #{p.err_cel_val}
	        , #{p.fmla_cel_val}
	        , #{p.cel_idx_no}
	        , #{p.cel_marg}
	        , #{g.username}
	        , #{g.now}
	    )
	</insert>
	
	<update id="updateExcelInfo">
	    /*mail-work.updateExcelInfo 이메일 메일 업무 엑셀 Info 정보 수정*/
	    UPDATE EML_TASK_EXCEL_ATH
	       SET EML_TMPL_CD = #{p.eml_tmpl_cd}
	         , EML_TASK_NM = #{p.eml_task_nm}
	         , EML_TASK_EXPLN = #{p.eml_task_expln}
	         , USE_YN = #{p.use_yn}
	         , CNFD_YN = #{p.cnfd_yn}
	         , MODR_ID = #{g.username}
	         , MOD_DTTM = #{g.now}
	         , ATHG_UUID = #{p.athg_uuid}
	     WHERE TEN_ID = #{g.tenant}
	       AND EML_TASK_UUID = #{p.eml_task_uuid}
	</update>
	
	<update id="updateUseYnSaveExcel">
	    /*mail-work.updateUseYnSaveExcel 이메일 메일 업무 엑셀 Info 정보 수정*/
	    UPDATE EML_TASK_EXCEL_ATH
	       SET USE_YN = #{p.use_yn}
	     WHERE TEN_ID = #{g.tenant}
	       AND EML_TASK_UUID = #{p.eml_task_uuid}
	</update>
	
	<update id="updateExcelInfoConfirmYn">
	    /*mail-work.updateExcelInfoConfirmYn 이메일 메일 업무 엑셀 확정 처리*/
	    UPDATE EML_TASK_EXCEL_ATH
	       SET CNFD_YN = #{p.cnfd_yn}
	     WHERE TEN_ID = #{g.tenant}
	       AND EML_TASK_UUID = #{p.eml_task_uuid}
	</update>
	
	<resultMap type="map" id="resultMap-findListEmailWorkSendHistory">
	    <result property="sh_to_addr" column="SH_TO_ADDR" jdbcType="CLOB" javaType="string"/>
	    <result property="sh_to_nm" column="SH_TO_NM" jdbcType="CLOB" javaType="string"/>
	    <result property="sh_add_cont" column="SH_ADD_CONT" jdbcType="CLOB" javaType="string" />
	    <result property="sh_rst_msg" column="SH_RST_MSG" jdbcType="CLOB" javaType="string" />
	    <result property="rh_rst_msg" column="RH_RST_MSG" jdbcType="CLOB" javaType="string" />
	    <result property="sh_mail_cont" column="SH_MAIL_CONT" jdbcType="CLOB" javaType="string" />
	    <result property="rh_mail_cont" column="RH_MAIL_CONT" jdbcType="CLOB" javaType="string" />
	</resultMap>
	<select id="findListEmailWorkSendHistory" resultMap="resultMap-findListEmailWorkSendHistory">
	    /* mail.findListEmailWorkSendHistory 업무화면 이메일 업무 발송 이력 조회 */
	    SELECT SH.EML_SND_HISTREC_UUID      AS SH_EMAIL_SND_LOG_ID
	         , HIST.SNDR_EML             AS SH_FROM_ADDR
	         , HIST.SNDR_NM               AS SH_FROM_NM
	         , HIST.RCPNT_EML_LIST        AS SH_TO_ADDR
	         , HIST.RCPNT_NM_LIST         AS SH_TO_NM
	         , HIST.EML_TIT              AS SH_MAIL_TIT
	         , HIST.EML_CONT             AS SH_MAIL_CONT
	         , SH.TMPL_ATHG_UUID         AS TMPL_ATHG_UUID
	         , SH.ATHG_UUID               AS SH_ATTFILE
	         , (
	            SELECT COUNT(1)
	              FROM ATHF
	             WHERE TEN_ID = SH.TEN_ID
	               AND ATHG_UUID = SH.ATHG_UUID
	           ) AS SH_ATTFILE_CNT
	         , (
	            SELECT COUNT(1)
	              FROM ATHF
	             WHERE TEN_ID = RH.TEN_ID
	               AND ATHG_UUID = RH.ATHG_UUID
	           ) AS RH_ATTFILE_CNT
	         , SH.SND_RES_MSG               AS SH_RST_MSG
	         , SH.SND_DTTM                AS SH_SND_DT
	         , SH.EML_ADD_CONT              AS SH_ADD_CONT
	         , SH.RESND_RSN          AS SH_RE_SND_CAUSE
	         , SH.SND_STS_CCD           AS SH_SND_STS_CD
	         , AP.EML_TASK_SUBJ_UUID
	         , AP.EML_TASK_UUID
	         , AP.TASK_UUID
	         , AP.EML_TASK_DTL_UUID
	         , AP.EML_RE_YN
	         , AP.EML_TASK_STS_CCD
	         , EX.EML_TASK_UUID
	         , EX.EML_TASK_NM
	         , EX.EML_TASK_EXPLN
	         , EX.EML_TASK_TYP_CCD
	         , RH.EML_RCPT_HISTREC_UUID AS RH_EMAIL_RECEIVED_LOG_ID
	         , RH.RCPT_STS_CCD AS RH_RECEIVED_STS_CD
	         , RH.EML_TASK_SUBJ_UUID AS RH_EMAIL_WORK_TARG_ID
	         , RH.RCPT_EML_TYP_CCD AS RH_RECEIVED_CATE
	         , RH.SNDR_EML AS RH_FROM_ADDR
	         , RH.SNDR_NM AS RH_FROM_NM
	         , RH.RCPNT_EML AS RH_TO_ADDR
	         , RH.RCPNT_NM AS RH_TO_NM
	         , RH.EML_TIT AS RH_MAIL_TIT
	         , RH.EML_CONT AS RH_MAIL_CONT
	         , RH.ATHG_UUID AS RH_ATTFILE
	         , RH.RCPT_RES_MSG AS RH_RST_MSG
	         , RH.RCPT_DTTM AS RH_RECEIVED_DT
	         , ML.EML_TMPL_CD
	         , ML.CTMPL_UUID
	         , ML.EML_TMPL_NM
	         <if test='g.existModule("RFX")'>
	             , RFXVD.VD_PIC_UUID
	             , RFXVD.VD_PIC_EML
	             , RFXVD.VD_PIC_TEL
	             , VD.VD_NM
	             , QTHD.RFX_BID_UUID
	             , QTHD.RFX_BID_NO
	             , QTHD.RFX_BID_REVNO
	         </if>
	      FROM EML_TASK_EXCEL_ATH EX
	     INNER JOIN EML_TASK_PRGS_STS AP
	        ON EX.TEN_ID        = AP.TEN_ID
	       AND EX.EML_TASK_UUID = AP.EML_TASK_UUID
	      LEFT OUTER JOIN EML_TASK_SND_HISTREC SH
	        ON AP.TEN_ID             = SH.TEN_ID
	       AND AP.EML_TASK_SUBJ_UUID = SH.EML_TASK_SUBJ_UUID
	      LEFT OUTER JOIN EML_SND_HISTREC HIST
	        ON HIST.TEN_ID = SH.TEN_ID
	       AND HIST.EML_SND_UUID = SH.EML_SND_UUID
	      LEFT OUTER JOIN EML_TASK_RCPT_HISTREC RH
	        ON AP.TEN_ID = RH.TEN_ID
	       AND AP.EML_TASK_SUBJ_UUID = RH.EML_TASK_SUBJ_UUID
	       AND SH.EML_SND_HISTREC_UUID = RH.EML_SND_HISTREC_UUID
	      <if test='g.existModule("RFX")'>
	          LEFT OUTER JOIN RFX_VD RFXVD
	            ON RFXVD.TEN_ID = AP.TEN_ID
	           AND RFXVD.RFX_UUID = AP.TASK_UUID
	           AND RFXVD.VD_CD  = AP.EML_TASK_DTL_UUID
	           AND RFXVD.STS   != 'D'
	          LEFT OUTER JOIN RFX_BID QTHD
	            ON QTHD.TEN_ID   = RFXVD.TEN_ID
	           AND QTHD.RFX_NO   = RFXVD.RFX_NO
	           AND QTHD.RFX_RND  = RFXVD.RFX_RND
	           AND QTHD.VD_CD    = RFXVD.VD_CD
	           AND QTHD.RFX_BID_EFCT_YN = 'Y'
	           AND QTHD.RFX_BID_STS_CCD = 'S'
	          LEFT OUTER JOIN VD VD
	            ON VD.TEN_ID = RFXVD.TEN_ID
	           AND VD.VD_CD  = RFXVD.VD_CD
	      </if>
	      LEFT OUTER JOIN EML_TMPL_SETUP ML
	        ON EX.TEN_ID = ML.TEN_ID
	       AND EX.EML_TMPL_CD = ML.EML_TMPL_CD
	     WHERE EX.TEN_ID = #{g.tenant}
	       AND AP.TASK_UUID = #{p.task_uuid}
	       <if test="p.eml_task_dtl_uuid != null and p.eml_task_dtl_uuid != '' ">
	           AND AP.EML_TASK_DTL_UUID = #{p.eml_task_dtl_uuid}
	       </if>
	     ORDER BY SH.SND_DTTM DESC
	</select>
	
	<select id="mailReceiveExcelFileGetInfo" resultMap="resultMap-findExcelSendMailById">
	    /* mail.mailReceiveExcelFileGetInfo 메일 수신 후 ExcelFile 내에서 찾은 id 값으로 info 조회 */
	    SELECT SH.TEN_ID
	         , SH.EML_SND_HISTREC_UUID
	         , SH.EML_TASK_SUBJ_UUID
	         , HIST.SNDR_EML
	         , HIST.SNDR_NM
	         , HIST.RCPNT_EML_LIST AS RCPNT_EML
	         , HIST.RCPNT_NM_LIST AS RCPNT_NM
	         , HIST.EML_TIT
	         , HIST.EML_CONT
	         , SH.TMPL_ATHG_UUID
	         , SH.ATHG_UUID
	         , SH.SND_RES_MSG
	         , SH.SND_DTTM
	         , SH.EML_ADD_CONT
	         , SH.RESND_RSN
	         , AP.EML_TASK_SUBJ_UUID
	         , AP.EML_TASK_UUID
	         , AP.TASK_UUID
	         , AP.EML_TASK_DTL_UUID
	         , AP.EML_RE_YN
	         , AP.EML_TASK_STS_CCD
	         , EX.EML_TASK_UUID
	         , EX.EML_TASK_NM
	         , EX.EML_TASK_EXPLN
	         , EX.EML_TASK_TYP_CCD
	         , ML.EML_TMPL_CD
	         , ML.CTMPL_UUID
	         , ML.EML_TMPL_NM
	      FROM EML_TASK_EXCEL_ATH EX
	     INNER JOIN EML_TMPL_SETUP ML
	        ON EX.TEN_ID = ML.TEN_ID
	       AND EX.EML_TMPL_CD = ML.EML_TMPL_CD
	     INNER JOIN EML_TASK_PRGS_STS AP
	        ON EX.TEN_ID = AP.TEN_ID
	       AND EX.EML_TASK_UUID = AP.EML_TASK_UUID
	     INNER JOIN EML_TASK_SND_HISTREC SH
	        ON AP.TEN_ID = SH.TEN_ID
	       AND AP.EML_TASK_SUBJ_UUID = SH.EML_TASK_SUBJ_UUID
	     INNER JOIN EML_SND_HISTREC HIST
	        ON HIST.TEN_ID = SH.TEN_ID
	       AND HIST.EML_SND_UUID = SH.EML_SND_UUID
	     WHERE EX.TEN_ID = #{g.tenant}
	       AND SH.EML_SND_HISTREC_UUID = #{p.eml_snd_histrec_uuid}
	       AND SH.EML_TASK_SUBJ_UUID = #{p.eml_task_subj_uuid}
	</select>
	
	<select id="getMailWorkList" resultType="map">
	    /* mail-work.getMailWorkList : 콤보박스용 이메일 업무 목록 조회*/
	    SELECT B.EML_TMPL_CD AS EML_TMPL_CD
	         , C.CTMPL_NM AS EML_TMPL_NM
	      FROM CTMPL A
	     INNER JOIN EML_TMPL_SETUP B
	        ON A.TEN_ID = B.TEN_ID
	       AND A.CTMPL_UUID = B.CTMPL_UUID
	     INNER JOIN CTMPL_MULTLANG C
	        ON A.TEN_ID = C.TEN_ID
	       AND A.CTMPL_UUID = C.CTMPL_UUID
	       AND C.LANG_CCD = #{g.locale}
	     WHERE A.TEN_ID = #{g.tenant}
	       AND A.STS != 'D'
	     ORDER BY B.EML_TMPL_CD
	</select>
	
	<select id="findSheetFieldValue" resultType="map">
	    /* mail-work.findSheetFieldValue : ExcelInfo Field grid용 combobox조회 */
	    SELECT B.EML_TMPL_CD AS EML_TMPL_CD
	         , C.CTMPL_NM AS CTMPL_NM
	      FROM CTMPL A
	     INNER JOIN EML_TMPL_SETUP B
	        ON A.TEN_ID = B.TEN_ID
	       AND A.CTMPL_UUID = B.CTMPL_UUID
	     INNER JOIN CTMPL_MULTLANG C
	        ON A.TEN_ID = C.TEN_ID
	       AND A.CTMPL_UUID = C.CTMPL_UUID
	       AND C.LANG_CCD = #{g.locale}
	     WHERE A.TEN_ID = #{g.tenant}
	       AND A.STS != 'D'
	     ORDER BY B.EML_TMPL_CD
	</select>
	
	<insert id="insertExcelWorkSendMail">
	    /* mail-work.insertExcelWorkSendMail  이메일 업무 전용 발송 email table insert */
	    INSERT INTO EML_TASK_SND_HISTREC (
	        TEN_ID
	        , EML_SND_HISTREC_UUID
	        , EML_TASK_SUBJ_UUID
	        , ATHG_UUID
	        , TMPL_ATHG_UUID
	        , SND_RES_MSG
	        , SND_DTTM
	        , EML_ADD_CONT
	        , RESND_RSN
	        , REG_DTTM
	        , REGR_ID
	        , MOD_DTTM
	        , MODR_ID
	    ) VALUES (
	        #{g.tenant}
	        , #{p.eml_snd_histrec_uuid}
	        , #{p.eml_task_subj_uuid}
	        , #{p.athg_uuid}
	        , #{p.tmpl_athg_uuid}
	        , #{p.snd_res_msg}
	        , #{p.snd_dttm}
	        , #{p.eml_add_cont}
	        , #{p.resnd_rsn}
	        , #{g.now}
	        , #{g.username}
	        , #{g.now}
	        , #{g.username}
	    )
	</insert>
	
	<update id="updateExcelWorkSendMail">
	    UPDATE EML_TASK_SND_HISTREC
	       SET EML_SND_UUID = #{p.eml_snd_uuid}
	     WHERE TEN_ID = #{g.tenant}
	       AND EML_SND_HISTREC_UUID = #{p.eml_snd_histrec_uuid}
	</update>
	
	<insert id="insertExcelWorkApplicationProcess">
	    /* mail-work.insertExcelWorkApplicationProcess  이메일 업무 전용 진행관리  table insert */
	    INSERT INTO EML_TASK_PRGS_STS (
	        TEN_ID
	        , EML_TASK_SUBJ_UUID
	        , EML_TASK_UUID
	        , TASK_UUID
	        , EML_TASK_DTL_UUID
	        , EML_RE_YN
	        , EML_TASK_STS_CCD
	        , REGR_ID
	        , REG_DTTM
	        , MODR_ID
	        , MOD_DTTM
	        , CLSG_YN
	    ) VALUES (
	        #{g.tenant}
	        , #{p.eml_task_subj_uuid}
	        , #{p.eml_task_uuid}
	        , #{p.task_uuid}
	        , #{p.eml_task_dtl_uuid}
	        , 'N'
	        , 'SND_WTG'
	        , #{g.username}
	        , #{g.now}
	        , #{g.username}
	        , #{g.now}
	        ,  'N'
	    )
	</insert>
	
	<resultMap type="map" id="resultMap-findExcelSendMailById">
	    <result property="rcpnt_eml" column="RCPNT_EML" jdbcType="CLOB" javaType="string" />
		<result property="rcpnt_nm" column="RCPNT_NM" jdbcType="CLOB" javaType="string" />
	    <result property="eml_add_cont" column="EML_ADD_CONT" jdbcType="CLOB" javaType="string" />
	    <result property="eml_cont" column="EML_CONT" jdbcType="CLOB" javaType="string" />
	    <result property="snd_res_msg" column="SND_RES_MSG " jdbcType="CLOB" javaType="string" />
	</resultMap>
	<select id="findExcelSendMailById" resultMap="resultMap-findExcelSendMailById">
	    /* mail.findExcelSendMailById : 이메일 업무 발송 메일 상세 조회 */
	    SELECT SH.TEN_ID
	         , SH.EML_SND_HISTREC_UUID
	         , SH.EML_TASK_SUBJ_UUID
	         , HIST.SNDR_EML
	         , HIST.SNDR_NM
	         , HIST.RCPNT_EML_LIST AS RCPNT_EML
	         , HIST.RCPNT_NM_LIST AS RCPNT_NM
	         , HIST.EML_TIT
	         , HIST.EML_CONT
	         , SH.TMPL_ATHG_UUID
	         , SH.ATHG_UUID
	         , SH.SND_RES_MSG
	         , SH.SND_DTTM
	         , SH.EML_ADD_CONT
	         , SH.RESND_RSN
	         , AP.EML_TASK_SUBJ_UUID
	         , AP.EML_TASK_UUID
	         , AP.TASK_UUID
	         , AP.EML_TASK_DTL_UUID
	         , AP.EML_RE_YN
	         , AP.CLSG_YN
	         , AP.EML_TASK_STS_CCD
	         , EX.EML_TASK_UUID
	         , EX.EML_TASK_NM
	         , EX.EML_TASK_EXPLN
	         , EX.EML_TASK_TYP_CCD
	         , ML.EML_TMPL_CD
	         , ML.CTMPL_UUID
	         , ML.EML_TMPL_NM
	      FROM EML_TASK_EXCEL_ATH EX
	     INNER JOIN EML_TMPL_SETUP ML
	        ON EX.TEN_ID = ML.TEN_ID
	       AND EX.EML_TMPL_CD = ML.EML_TMPL_CD
	     INNER JOIN EML_TASK_PRGS_STS AP
	        ON EX.TEN_ID = AP.TEN_ID
	       AND EX.EML_TASK_UUID = AP.EML_TASK_UUID
	     INNER JOIN EML_TASK_SND_HISTREC SH
	        ON AP.TEN_ID = SH.TEN_ID
	       AND AP.EML_TASK_SUBJ_UUID = SH.EML_TASK_SUBJ_UUID
	     INNER JOIN EML_SND_HISTREC HIST
	        ON HIST.TEN_ID = SH.TEN_ID
	       AND HIST.EML_SND_UUID = SH.EML_SND_UUID
	     WHERE EX.TEN_ID = #{g.tenant}
	       AND EX.EML_TMPL_CD = #{p.eml_tmpl_cd}
	       AND AP.EML_TASK_SUBJ_UUID = #{p.eml_task_subj_uuid}
	</select>
	
	<delete id="deleteEmailWorkSendMailList">
	    /* mail-work.deleteEmailWorkSendMailList: 이메일 업무 발송된 내역 삭제 */
	    DELETE
	      FROM EML_TASK_SND_HISTREC
	     WHERE TEN_ID = #{g.tenant}
	       AND EML_TASK_SUBJ_UUID IN
		<foreach collection="p.emailTaskSubjectList" item="eml_task_subj_uuid" separator="," open="(" close=")">
			#{eml_task_subj_uuid}
		</foreach>
	</delete>
	
	<delete id="deleteEmailWorkMailInfo">
	    /* mail-work.deleteEmailWorkMailInfo: 이메일 업무 발송 진행 관리 INFO 정보 삭제  */
	    DELETE
	      FROM EML_TASK_PRGS_STS
	     WHERE TEN_ID = #{g.tenant}
	       AND EML_TASK_SUBJ_UUID IN
		<foreach collection="p.emailTaskSubjectList" item="eml_task_subj_uuid" separator="," open="(" close=")">
			#{eml_task_subj_uuid}
		</foreach>

	</delete>
	
	<select id="findListEmailWorkMailInfo" resultType="map">
	    SELECT TEN_ID
	         , EML_TASK_SUBJ_UUID
	         , EML_TASK_UUID
	         , TASK_UUID
	         , EML_TASK_DTL_UUID
	         , EML_RE_YN
	         , EML_TASK_STS_CCD
	         , REGR_ID
	         , REG_DTTM
	         , MODR_ID
	         , MOD_DTTM
	         , CLSG_YN
	      FROM EML_TASK_PRGS_STS
	     WHERE TEN_ID = #{g.tenant}
	       AND EML_TASK_UUID = #{p.eml_task_uuid}
	</select>
	<select id="findListEmailWorkTaskSubjectUUID" resultType="java.lang.String">
	    SELECT EML_TASK_SUBJ_UUID
	      FROM EML_TASK_PRGS_STS
	     WHERE TEN_ID = #{g.tenant}
	       AND EML_TASK_UUID = #{p.eml_task_uuid}
	</select>

</mapper>