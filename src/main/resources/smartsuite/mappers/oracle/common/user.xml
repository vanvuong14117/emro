<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="user">
	<select id="findListUser" resultType="map">
	/* user.findListUser: 내부 사용자 목록 조회 */	
    SELECT USR.CO_CD                        /* 조직코드 */
		, CASE WHEN 'en_US' = #{g.locale} THEN LOGIC_ORG.LOGIC_ORG_NM_EN ELSE LOGIC_ORG.LOGIC_ORG_NM END AS DISPLAY_COMP_NM /* 조직명 */
        , LOGIC_ORG.LOGIC_ORG_NM AS COMP_NM
        , LOGIC_ORG.LOGIC_ORG_NM_EN AS COMP_NM_EN
		, USR.USR_ID                         /* 사용자아이디 */
         , CASE WHEN 'en_US' = #{g.locale} THEN USR.USR_NM_EN ELSE USR.USR_NM END AS DISPLAY_USR_NM                         /* 사용자명 */
         , USR.USR_NM
         , USR.USR_NM_EN
         , USR.USE_YN                         /* 사용여부 */
         , USR.DEPT_CD                        /* 부서코드 */
         , USR.POSI_CCD                         /* 직위코드 */
         , USR.JOBTIT_CCD                    /* 직책코드 */
         , USR.EML
         , USR.TEL
         , USR.MOB
         , DP.DEPT_NM
         , DP.DEPT_NM_EN
         , CASE WHEN 'en_US' = #{g.locale} THEN (CASE WHEN DP.DEPT_NM_EN IS NULL THEN ''
				ELSE DP.DEPT_NM_EN END ) ELSE (CASE WHEN DP.DEPT_NM IS NULL THEN ''
		ELSE DP.DEPT_NM END )  END AS DISPLAY_DEPT_NM   /* 부서명 */
      FROM USR USR                        /* A : 사용자 정보 */
     INNER JOIN LOGIC_ORG LOGIC_ORG                   /* B : 조직 */
        ON USR.TEN_ID = LOGIC_ORG.TEN_ID
       AND USR.CO_CD = LOGIC_ORG.LOGIC_ORG_CD
       AND LOGIC_ORG.LOGIC_ORG_TYP_CCD = 'COMPANY'
       AND LOGIC_ORG.STS != 'D'
	  LEFT OUTER JOIN LOGIC_ORG_DEPT_MAPG ODM
		ON USR.TEN_ID = ODM.TEN_ID
		AND USR.CO_CD = ODM.LOGIC_ORG_CD
		AND USR.DEPT_CD = ODM.DEPT_CD
		AND ODM.LOGIC_ORG_TYP_CCD = 'COMPANY'
      LEFT OUTER JOIN DEPT DP             /* C : 부서 */
        ON USR.TEN_ID = DP.TEN_ID
       AND USR.CO_CD = ODM.LOGIC_ORG_CD
       AND DP.DEPT_CD = ODM.DEPT_CD
       AND LOGIC_ORG.LOGIC_ORG_TYP_CCD = ODM.LOGIC_ORG_TYP_CCD
       AND DP.STS != 'D'
     WHERE USR.TEN_ID = #{g.tenant}
       AND USR.STS != 'D'
       AND USR.USR_TYP_CCD = 'BUYER'
       <if test='p.co_cd != null and p.co_cd != ""'>
       AND USR.CO_CD = #{p.co_cd}
       </if>
		<if test="p.usr_nm != null and p.usr_nm != ''">
			<bind name="namePattern" value="'%' + p.usr_nm + '%'" />
			AND (UPPER(USR.USR_NM_EN) LIKE UPPER(#{namePattern}) OR UPPER(USR.USR_NM) LIKE UPPER(#{namePattern}))
		</if>
       <if test="p.usr_id != null and p.usr_id != ''">
       	<bind name="userIdPattern" value="'%' + p.usr_id + '%'" />
       AND UPPER(USR.USR_ID) LIKE UPPER(#{userIdPattern})
       </if>            
       <if test="p.nolike_usr_id != null and p.nolike_usr_id != ''">
       AND USR.USR_ID = #{p.nolike_usr_id}
       </if>
       <if test="p.dept_cd != null and p.dept_cd != ''">
       AND DP.DEPT_CD = #{p.dept_cd}
       </if>
		<if test="p.dept_nm != null and p.dept_nm != ''">
			<bind name="deptNmPattern" value="'%' + p.dept_nm + '%'" />
			AND (UPPER(DP.DEPT_NM_EN) LIKE UPPER(#{deptNmPattern}) OR  UPPER(DP.DEPT_NM) LIKE UPPER(#{deptNmPattern}))
		</if>
     ORDER BY USR.USR_ID
    </select>
    
    <select id="findListUserEdu" resultType="map">
    /* user.findListUserEdu: 교육용 내부 사용자 목록 조회 */
    	SELECT USR_ID
    				 , CASE WHEN 'en_US' = #{g.locale} THEN USR_NM_EN ELSE USR_NM END AS DISPLAY_USR_NM                         /* 사용자명 */
    				 , DEPT_CD 
    				 , DEPT_NM AS DISPLAY_DEPT_NM
    				 , USR_ID				/* 사용자아이디 */
    				 , USR_NM			/* 사용자 명 */
    				 , DEPT_NM		/* 부서 명 */
    		FROM USR_EDU
    	  WHERE TEN_ID = #{g.tenant}
    	  		AND STS != 'D'
				<if test="p.usr_nm != null and p.usr_nm != ''">
				<bind name="namePattern" value="'%' + p.usr_nm + '%'" />
				AND (UPPER(USR_NM_EN) LIKE UPPER(#{namePattern}) OR UPPER(USR_NM) LIKE UPPER(#{namePattern}))
				</if>
       			<if test="p.usr_id != null and p.usr_id != ''">
       			<bind name="userIdPattern" value="'%' + p.usr_id + '%'" />
       			AND UPPER(USR_ID) LIKE UPPER(#{userIdPattern})
       			</if>            
       			<if test="p.nolike_usr_id != null and p.nolike_usr_id != ''">
       			AND USR_ID = #{p.nolike_usr_id}
       			</if>
       			<if test="p.dept_cd != null and p.dept_cd != ''">
       			AND DEPT_CD = #{p.dept_cd}
       			</if>
				<if test="p.dept_nm != null and p.dept_nm != ''">
				<bind name="deptNmPattern" value="'%' + p.dept_nm + '%'" />
				AND UPPER(DEPT_NM) LIKE UPPER(#{deptNmPattern})
				</if>
    </select>

	<select id="getUserCount" resultType="int">
    /* user.saveUser: 내부 사용자 존재 여부 확인 */	
		SELECT
		COUNT(USR_ID)
		FROM USR
		WHERE
			TEN_ID = #{g.tenant}
			AND UPPER(USR_ID) = UPPER(#{p.usr_id})
	</select>

	<select id="findUserByUserId" resultType="map">
   	/* user.findUserByUserId: 내부 사용자 정보 조회 */	
		SELECT USR.TEN_ID
		,      USR.CO_CD
		,      USR.USR_ID
		,      USR.USR_NM
		,      USR.USR_NM_EN
		,      USR.POSI_CCD
		,      USR.DEPT_CD
		,      DP.DEPT_NM
		, CASE WHEN 'en_US' = #{g.locale} THEN (CASE WHEN DP.DEPT_NM_EN IS NULL THEN ''
													 ELSE DP.DEPT_NM_EN END ) ELSE (CASE WHEN DP.DEPT_NM IS NULL THEN ''
																						 ELSE DP.DEPT_NM END )  END AS DISPLAY_DEPT_NM
		,      USR.HOME_SCR_TYP_CCD
		,      USR.TEL
		,      USR.MOB
		,      USR.FAX
		,      USR.EML
		,      USR.EML_RCPT_YN
		,      USR.SMS_RCPT_YN
		,      USR.USE_YN
		,	   USR.TMZ_CCD
		,      USR.JOBTIT_CCD
		,      USR.ACCT_LCKD_YN
		,      USR.PWD_INPERR_CNT
		,      USR.PWD_CHG_DTTM
		,      USR.LAST_LOGIN_DTTM
		,	   USR.LBL_SORT_TYP_CCD
		FROM USR USR
     	INNER JOIN LOGIC_ORG LOGIC_ORG                   /* B : 조직 */
			ON  LOGIC_ORG.TEN_ID = USR.TEN_ID
			AND LOGIC_ORG.LOGIC_ORG_CD = USR.CO_CD
			AND LOGIC_ORG.LOGIC_ORG_TYP_CCD = 'COMPANY'
			AND LOGIC_ORG.STS != 'D'
		LEFT OUTER JOIN LOGIC_ORG_DEPT_MAPG ODM
			ON USR.TEN_ID = ODM.TEN_ID
			AND USR.CO_CD = ODM.LOGIC_ORG_CD
			AND USR.DEPT_CD = ODM.DEPT_CD
			AND ODM.LOGIC_ORG_TYP_CCD = 'COMPANY'
		LEFT OUTER JOIN DEPT DP              /* C : 부서 */
        ON USR.TEN_ID = DP.TEN_ID
	        AND USR.CO_CD = ODM.LOGIC_ORG_CD
	        AND DP.DEPT_CD = ODM.DEPT_CD
	        AND LOGIC_ORG.LOGIC_ORG_TYP_CCD = ODM.LOGIC_ORG_TYP_CCD
	        AND DP.STS != 'D'
	    WHERE USR.TEN_ID = #{g.tenant}
	      AND UPPER(USR.USR_ID) = UPPER(#{p.usr_id})
	</select>

	<insert id="insertUser">
    /* user.saveUser: 내부 사용자 정보 신규 등록 */	
		INSERT INTO USR(
			TEN_ID
			,USR_ID
			,PWD
			,CO_CD
			,USR_NM
			,USR_NM_EN
			,USR_TYP_CCD
			,POSI_CCD
			,EMPNO
			,DEPT_CD
			,VD_CD
			,USE_YN
			,MOB
			,TEL
			,FAX
			,EML
			,RMK
			,EML_RCPT_YN
			,SMS_RCPT_YN
			,PWD_INIT_YN
			,PWD_CHG_REQD_YN
			,TMZ_CCD
			,JOBTIT_CCD
			,HOME_SCR_TYP_CCD
			,LBL_SORT_TYP_CCD
			,STS
			,REGR_ID
			,REG_DTTM
			,PWD_CHG_DTTM
			,ACCT_LCKD_YN
		) VALUES (
			#{g.tenant}
			,UPPER(#{p.usr_id})
			,#{p.password}
			,#{p.co_cd}
			,#{p.usr_nm}
			,#{p.usr_nm_en}
			,#{p.usr_typ_ccd}
			,#{p.posi_ccd}
			,#{p.empno}
			,#{p.dept_cd}
			,#{p.vd_cd}
			,#{p.use_yn}
			,#{p.mob}
			,#{p.tel}
			,#{p.fax}
			,#{p.eml}
			,#{p.rmk}
			,#{p.eml_rcpt_yn}
			,#{p.sms_rcpt_yn}
			,'Y'
			,'Y'
			,#{p.tmz_ccd}
			,#{p.jobtit_ccd}
			,#{p.home_scr_typ_ccd}
			,#{p.lbl_sort_typ_ccd}
			,'C'
			,#{g.username}
			,#{g.now}
			,#{g.now}
			,'N'
		)
	</insert>

	<update id="updateUser">
    /* user.saveUser: 내부 사용자 정보 수정 */	
		UPDATE USR
		SET
				USR_NM = #{p.usr_nm}
				<if test='p.pw != null'>
				,PWD = #{p.pw}
				</if>
				,USR_NM_EN = #{p.usr_nm_en}
				<if test="p.dept_cd != null and p.dept_cd != ''">
				,DEPT_CD = #{p.dept_cd}
				</if>
				,USE_YN = #{p.use_yn}
				,MOB = #{p.mob}
				,TEL = #{p.tel}
				,FAX = #{p.fax}
				,EML = #{p.eml}
				,EML_RCPT_YN = #{p.eml_rcpt_yn}
				,SMS_RCPT_YN = #{p.sms_rcpt_yn}
				,TMZ_CCD = #{p.tmz_ccd}
				,JOBTIT_CCD = #{p.jobtit_ccd}
				,HOME_SCR_TYP_CCD= #{p.home_scr_typ_ccd}
				,LBL_SORT_TYP_CCD= #{p.lbl_sort_typ_ccd}
				,POSI_CCD = #{p.posi_ccd}
				,STS = 'U'
				,MODR_ID = #{g.username}
				,MOD_DTTM = #{g.now}
		WHERE TEN_ID = #{g.tenant}
		  AND USR_ID = #{p.usr_id}
	</update>
	
	<update id="updatePw">
    /* user.updatePw: 사용자 사용자 비밀번호 업데이트  */	
		UPDATE USR
		SET
			PWD = #{p.password}
			,PWD_INIT_YN = 'N'
			,PWD_INPERR_CNT = 0
			,PWD_CHG_REQD_YN = 'N'
			,PWD_CHG_DTTM = #{g.now}
			,MODR_ID = #{g.username}
			,MOD_DTTM = #{g.now}
		WHERE TEN_ID = #{g.tenant}
		  AND USR_ID = #{g.username}
	</update>
	
	<update id="initPwByUserId">
    /* user.initPw: 내부 사용자 사용자 비밀번호 초기화  */	
		UPDATE USR
		SET
			PWD = #{p.password}
			,PWD_INIT_YN = 'Y'
			,PWD_INPERR_CNT = 0
			,ACCT_LCKD_YN = 'N'
			,PWD_CHG_REQD_YN = 'Y'
			,PWD_CHG_DTTM = #{g.now}
			,MODR_ID = #{g.username}
			,MOD_DTTM = #{g.now}
		WHERE TEN_ID = #{g.tenant}
		  AND USR_ID = #{p.usr_id}
	</update>

    <update id="deleteUser">
    /* user.deleteListUser: 내부 사용자 정보 수정 */
	    UPDATE USR
	    SET
	        STS = 'D'
		  , MOD_DTTM = #{g.now}
		  , MODR_ID = #{g.username}
	    WHERE TEN_ID = #{g.tenant}
	      AND CO_CD = #{p.co_cd}
	      AND USR_ID = #{p.usr_id}
    </update>
    
	<select id="findListRoleByUser" resultType="map">
	/* user.findListRoleByUser 사용자 별 역할 확인 */
		    SELECT 
	             RP.USR_ID
	            ,U.USR_NM
	            ,CASE WHEN RP.ROLE_CD IS NOT NULL THEN 'Y' ELSE 'N' END AS GRANTED
	            ,RH.ROLE_CD
	            ,RH.ROLE_NM
	            ,RH.ROLE_NM_EN
	          FROM ROLE RH
   LEFT OUTER JOIN ROLE_USR RP
                ON RH.ROLE_CD = RP.ROLE_CD 
               AND RH.TEN_ID = RP.TEN_ID
               AND UPPER (RP.USR_ID) = #{p.usr_id}
   LEFT OUTER JOIN USR U
                ON U.USR_ID = RP.USR_ID 
               AND UPPER (U.USR_ID) = #{p.usr_id}
               AND U.TEN_ID = RH.TEN_ID
             WHERE RH.TEN_ID = #{g.tenant}
		<if test='p.usr_typ_ccd != null and p.usr_typ_ccd != ""'>
			AND RH.USR_TYP_CCD = #{p.usr_typ_ccd}
		</if>
	</select>

	<insert id="insertUserRoleByUser">
	/* user.saveRoleByUser 사용자 별 역할 저장(신규추가) */
		INSERT INTO ROLE_USR (TEN_ID, USR_ID,
			ROLE_CD, RMK, STS, REGR_ID, REG_DTTM
		)
		VALUES (#{g.tenant}, UPPER(#{p.usr_id}),
			#{p.role_cd}, #{p.rmk}, 'C',	#{g.username}, #{g.now}
		)
	</insert>
	
	<delete id="deleteUserRoleByRoleCodeAndUserId">
	/* user.saveRoleByUser 사용자 별 역할 저장(삭제) */
		DELETE FROM ROLE_USR
		WHERE TEN_ID = #{g.tenant}
			AND USR_ID = #{p.usr_id}
			AND ROLE_CD = #{p.role_cd}
	</delete>	
	
	<delete id="deleteUserRoleByUserId">
	/* user.deleteUserRoleByUserId 사용자 역할 삭제 */
		DELETE 
		  FROM ROLE_USR
		 WHERE TEN_ID  = #{g.tenant}
		   AND USR_ID  = #{p.usr_id}
	</delete>
	
	<select id="findListUserOperationOrganization" resultType="map">
	/* user.findListUserOperationOrganization 사용자 별 운영조직 조회 */
		SELECT
			OORG_USR.USR_ID
			,OORG_USR.OORG_CD
			,OORG.OUNIT_CD
			,OUNIT.OUNIT_NM
			, CONCAT(CONCAT(CONCAT('[', OUNIT.OUNIT_NM), '] '), LOGIC_ORG.LOGIC_ORG_NM) AS OORG_NM
			, CONCAT(CONCAT(CONCAT('[', OUNIT.OUNIT_NM_EN), '] '), LOGIC_ORG.LOGIC_ORG_NM_EN) AS OORG_NM_EN
			,(SELECT DTLML.DTLCD_NM FROM DTLCD_MULTLANG DTLML WHERE DTLML.TEN_ID = LOGIC_ORG.TEN_ID AND DTLML.CCD =  'C079' AND DTLML.LANG_CCD = 'ko_KR'  AND LOGIC_ORG.LOGIC_ORG_TYP_CCD = DTLML.DTLCD ) AS LOGIC_ORG_TYP_NM
			,OORG.LOGIC_ORG_TYP_CCD
			,OORG.LOGIC_ORG_CD
			,LOGIC_ORG.LOGIC_ORG_NM
			,LOGIC_ORG.LOGIC_ORG_NM_EN
			,LOGIC_ORG.LOGIC_ORG_CD AS CO_CD
		FROM OORG_USR OORG_USR, OORG OORG, LOGIC_ORG LOGIC_ORG, OUNIT OUNIT
		WHERE OORG_USR.TEN_ID = #{g.tenant}
		AND OORG_USR.USR_ID = #{p.usr_id}
		AND OORG_USR.TEN_ID = OORG.TEN_ID
		AND OORG_USR.OORG_CD = OORG.OORG_CD
		AND OORG.TEN_ID = LOGIC_ORG.TEN_ID
		AND OORG.LOGIC_ORG_CD = LOGIC_ORG.LOGIC_ORG_CD
		AND OORG.TEN_ID = OUNIT.TEN_ID
		AND OORG.OUNIT_CD = OUNIT.OUNIT_CD
	</select>
	
	<select id="findUserInfoByUserIdAndEmail" resultType="map">
	   		/* user.findUserInfoByUserIdAndEmail: 내부 사용자 정보 조회 */
			SELECT
				A.CO_CD
				,A.USR_ID
				,A.USR_NM
				,A.USR_NM_EN
				,A.POSI_CCD
				,A.DEPT_CD
				,A.TEL
				,A.MOB
				,A.FAX
				,A.EML
				,A.EML_RCPT_YN
				,A.SMS_RCPT_YN
				,A.USE_YN
				,A.TMZ_CCD
				,A.JOBTIT_CCD
				,A.HOME_SCR_TYP_CCD
			FROM USR A
		   WHERE
				A.TEN_ID = #{g.tenant}
				AND EML = #{p.eml}
				AND USR_ID = #{p.usr_id}
	</select>

	<select id="findUserByEmail" resultType="map">
	   		/* user.findUserByEmail: 내부 사용자 정보 조회 */	
			SELECT
				A.CO_CD
				,A.USR_ID
				,A.USR_NM
				,A.USR_NM_EN
				,A.POSI_CCD
				,A.DEPT_CD
				,A.TEL
				,A.MOB
				,A.FAX
				,A.EML
				,A.EML_RCPT_YN
				,A.SMS_RCPT_YN
				,A.USE_YN
				,A.TMZ_CCD
				,A.JOBTIT_CCD
				,A.HOME_SCR_TYP_CCD
			FROM USR A
		   WHERE
				A.TEN_ID = #{g.tenant}
				AND EML = #{p.eml}
	</select>

	<!-- 계정잠김 해제 -->
	<update id="saveUserAccLockYn">
    /* user.saveUserAccLockYn : 계정잠김해제 */
    	UPDATE USR
    	   SET ACCT_LCKD_YN = 'N'
    	      ,PWD_INPERR_CNT = 0
    	      ,MODR_ID = #{g.username}
			  ,MOD_DTTM = #{g.now}
    	 WHERE TEN_ID = #{g.tenant}
    	   AND USR_ID = #{p.usr_id}
    </update>
	
	<select id="findListUserByDept" resultType="map">
		WITH GRADE AS (
			SELECT DTLCD.TEN_ID
			     , DTLCD.DTLCD
			     , DTLCD.DTLCD_SORT
			     , DTLCD_MULTLANG.DTLCD_NM
			  FROM DTLCD DTLCD
			 INNER JOIN DTLCD_MULTLANG DTLCD_MULTLANG
			    ON DTLCD_MULTLANG.TEN_ID = DTLCD.TEN_ID
			   AND DTLCD_MULTLANG.CCD = DTLCD.CCD
			   AND DTLCD_MULTLANG.DTLCD = DTLCD.DTLCD
			 WHERE DTLCD.TEN_ID = #{g.tenant}
			   AND DTLCD.CCD = 'C005'
			   AND DTLCD_MULTLANG.LANG_CCD = #{g.locale}
		), JOBTIT AS (
			SELECT DTLCD.TEN_ID
			     , DTLCD.DTLCD
			     , DTLCD.DTLCD_SORT
			     , DTLCD_MULTLANG.DTLCD_NM
			  FROM DTLCD DTLCD
			 INNER JOIN DTLCD_MULTLANG DTLCD_MULTLANG
			    ON DTLCD_MULTLANG.TEN_ID = DTLCD.TEN_ID
			   AND DTLCD_MULTLANG.CCD = DTLCD.CCD
			   AND DTLCD_MULTLANG.DTLCD = DTLCD.DTLCD
			 WHERE DTLCD.TEN_ID = #{g.tenant}
			   AND DTLCD.CCD = 'G012'
			   AND DTLCD_MULTLANG.LANG_CCD = #{g.locale}
		)
		SELECT USR.USR_ID
		     , USR.USR_NM
		     , USR.USR_NM_EN
		     , CASE WHEN 'en_US' = #{g.locale} THEN USR.USR_NM_EN
		            ELSE USR.USR_NM
		        END AS DISP_USR_NM
		     , USR.DEPT_CD
		     , DEPT.DEPT_NM
		     , DEPT.DEPT_NM_EN
		     , CASE WHEN 'en_US' = #{g.locale} THEN DEPT.DEPT_NM_EN
		            ELSE DEPT.DEPT_NM
		        END AS DISP_DEPT_NM
		     , USR.POSI_CCD
		     , GRADE.DTLCD_NM AS DISP_POSI_NM
		     , USR.JOBTIT_CCD
		     , JOBTIT.DTLCD_NM AS DISP_JOBTIT_NM
		  FROM USR
		  LEFT OUTER JOIN DEPT
		    ON DEPT.TEN_ID = USR.TEN_ID
		   AND DEPT.DEPT_CD = USR.DEPT_CD
		  LEFT OUTER JOIN JOBTIT
		    ON JOBTIT.TEN_ID = USR.TEN_ID
		   AND JOBTIT.DTLCD  = USR.JOBTIT_CCD
		  LEFT OUTER JOIN GRADE
		    ON GRADE.TEN_ID = USR.TEN_ID
		   AND GRADE.DTLCD  = USR.POSI_CCD
		 WHERE USR.TEN_ID = #{g.tenant}
		   AND USR.USR_ID != #{g.username}
		   AND USR.CO_CD = #{g.comp_cd}
		   <if test="p.dept_cd != null and p.dept_cd != ''">
		       AND USR.DEPT_CD = #{p.dept_cd}
		   </if>
		   <if test="p.usr_nm != null and p.usr_nm != ''">
		       <bind name="usrNamePattern" value="'%' + p.usr_nm + '%'"/>
		       AND (UPPER(USR.USR_NM) LIKE UPPER(#{usrNamePattern}) OR
		            UPPER(USR.USR_NM_EN) LIKE UPPER(#{usrNamePattern}))
		   </if>
		   <if test="p.jobtit_ccd != null">
		       AND USR.JOBTIT_CCD = #{p.jobtit_ccd}
		   </if>
		   AND USR.STS != 'D'
		 ORDER BY CASE WHEN JOBTIT.DTLCD_SORT IS NULL THEN 99
		               ELSE JOBTIT.DTLCD_SORT
		           END
		        , CASE WHEN GRADE.DTLCD_SORT IS NULL THEN 99
		               ELSE GRADE.DTLCD_SORT
		           END
		        , CASE WHEN 'en_US' = #{g.locale} THEN USR.USR_NM_EN
		               ELSE USR.USR_NM
		           END
	</select>

</mapper>